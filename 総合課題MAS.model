//====================================================================/
//　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　/
// artisoc                                                            /
//                                                                    /
//====================================================================/

Version = 4.2;



//-------------------------------------------------------
// Component Tree
//-------------------------------------------------------
UNIVERSE {
    Space society(0,0),Square_2D(50, 50, Loop, North, 1, !Map_3D){
        AgtType cust(0, 0)[0] {
            Dim ID(0, 0) As Integer = (0);
            Dim X(0, 0) As Double = (0.0);
            Dim Y(0, 0) As Double = (0.0);
            Dim Layer(0, 0) As Integer = (0);
            Dim Direction(0, 0) As Double = (0.0);
            Dim inout(0, 0) As Integer = (0);
            Dim time(0, 0) As Integer = (0);
            Dim afterbuy(0, 0) As Integer = (0);
            Dim beforebuy(0, 0) As Integer = (0);
            Dim Z(0, 0) As Double = (0.0);
            Dim Angle(0, 0) As Double = (0.0);
        }
        Dim reputation(0, 0)[50][50][1] As Integer = (2500*0);
    }
    Dim initial_rate(0, 0) As Integer = (0);
    Dim num_cust(0, 0) As Integer = (0);
    Dim num_yellow(0, 0) As Integer = (0);
    Dim num_red(0, 0) As Integer = (0);
    Dim num_blue(0, 0) As Integer = (0);
    Dim num_tapioka(0, 0) As Integer = (0);
    Dim advertisement(0, 0) As Integer = (0);
    Dim cash(0, 0) As Integer = (0);
    Dim kitchen(0, 0) As Integer = (0);
    Dim step_sale(0, 0) As Integer = (0);
}


//-------------------------------------------------------
// Agent Variable Initial Data
//-------------------------------------------------------
Initial_Value {
    UNIVERSE.INITIAL_RATE = 1(30);
    UNIVERSE.NUM_CUST = 1(30);
    UNIVERSE.ADVERTISEMENT = 1(120);
    UNIVERSE.CASH = 1(37);
    UNIVERSE.KITCHEN = 1(225);
    UNIVERSE.STEP_SALE = 1(0);
}


//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE
Univ_Init{
Dim i As Integer
Dim set As Agtset

For i=0 To Universe.num_cust
	CreateAgt(Universe.society.cust)
Next i
MakeAgtsetSpace(set,Universe.society)
RandomPutAgtset(set)
}

Univ_Step_Begin{
}

Univ_Step_End{

Dim set As Agtset
Dim one As Agt
Dim i As Integer
Dim j As Integer

For i = 0 To 49
	For j = 0 To 49
		If Universe.society.reputation(i,j,0) >0 Then
				Universe.society.reputation(i,j,0) =Universe.society.reputation(i,j,0) -1
		End if
	Next j
Next i


Universe.num_red=0
MakeAgtsetSpace(set,Universe.society)
For each one in set
	If one.inout == Color_Red Then
		Universe.num_red = Universe.num_red+1
	End if
Next one

Universe.num_blue=0
MakeAgtsetSpace(set,Universe.society)
For each one in set
	If one.inout == Color_Blue Then
		Universe.num_blue = Universe.num_blue+1
	End if
Next one

Universe.num_yellow=0
MakeAgtsetSpace(set,Universe.society)
For each one in set
	If one.inout == Color_Yellow Then
		Universe.num_yellow = Universe.num_yellow+1
	End if
Next one

Universe.num_tapioka=0
MakeAgtsetSpace(set,Universe.society)
For each one in set
	If one.inout == Color_Green Then
		Universe.num_tapioka = Universe.num_tapioka+1
	End if
Next one

Universe.step_sale=0
MakeAgtsetSpace(set,Universe.society)
For each one in set
	If one.inout == Color_White Then
		Universe.step_sale = Universe.step_sale+1
	End if
Next one
}

Univ_Finish{
#end_rule UNIVERSE




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.SOCIETY.CUST
Agt_Init{
My.Direction=Rnd()*360
If Rnd()*100 < Universe.initial_rate*0 Then
		My.inout=Color_Blue
Elseif  Rnd()*100 < Universe.initial_rate Then
		My.inout=Color_Red
Else
		My.inout=Color_Yellow
End if
My.time=0
My.afterbuy=0
}

Agt_Step{
Dim set As Agtset
Dim one As Agt
Dim surround As Agtset
Turn(Rnd()*40-20)
Forward(Rnd())
My.time=My.time+1
My.afterbuy=My.afterbuy+1

//ピークタイム(14:00~17:00)
If (My.time>=40)and(My.time<70)  Then
If Rnd()<0.3 and My.inout==Color_Yellow Then
			DelAgt(My)
End if
If Rnd() <0.2 Then
	one  = CreateAgt(Universe.society.cust)
	one.X = My.X
	one.Y = My.Y
	one.time=My.time
	one.inout=Color_Yellow
	If Rnd()*500 <Universe.advertisement and one.inout==Color_Yellow Then
		one.inout=Color_Red
	If Rnd()*250 <Universe.kitchen and one.inout==Color_Red Then
		one.inout=Color_Blue
		If Rnd() <0.9 Then
			one.inout=Color_Green
			If My.inout==Color_Green Then
				Universe.society.reputation(Int(one.X), Int(one.Y), 0) = Universe.society.reputation(Int(one.X), Int(one.Y), 0)+1 
				one=CreateAgt(Universe.society.cust)
				one.X = My.X
				one.Y = My.Y
				one.time=My.time
				one.inout=Color_White
				one.afterbuy=one.afterbuy+1
				
	If Universe.society.reputation(Int(one.X), Int(one.Y), 0) *Rnd() > 10 and one.inout == Color_Red Then 
   		one.inout = Color_Blue

MakeOneAgtsetAroundOwn(surround,1,Universe.society.cust,False)
	If CountAgtset(surround)>= Universe.cash*0.1 Then
		If one.condition == Color_Blue Then
				one.condition = Color_Red
	If CountAgtset(surround) >= 3 Then
		If one.condition == Color_Yellow Then
				KillAgt(one)
			End if
		End if	
		End if
	End if
	End if
			End if
		End if
	End if
	End if
End if

Else
//ピークタイム前（11:00~14:00)
If (My.time>=0)and(My.time<40)  Then
If Rnd()<0.1 and My.inout==Color_Yellow Then
			DelAgt(My)
End if
If Rnd() <0.1 Then
	one  = CreateAgt(Universe.society.cust)
	one.X = My.X
	one.Y = My.Y
	one.time=My.time
	one.inout=Color_Yellow
	If Rnd()*600 <Universe.advertisement and one.inout==Color_Yellow Then
		one.inout=Color_Red
	If Rnd()*375 <Universe.kitchen and one.inout==Color_Red Then
		one.inout=Color_Blue
		If Rnd() <0.8 Then
			one.inout=Color_Green
			If one.inout==Color_Green Then
				Universe.society.reputation(Int(one.X), Int(one.Y), 0) = Universe.society.reputation(Int(one.X), Int(one.Y), 0)+1
				one=CreateAgt(Universe.society.cust)
				one.X = My.X
				one.Y = My.Y
				one.time=My.time
				one.inout=Color_White
				one.afterbuy=one.afterbuy+1 
				
	If Universe.society.reputation(Int(one.X), Int(one.Y), 0)*Rnd()>10 and one.inout == Color_Red Then 
   		one.inout = Color_Blue

MakeOneAgtsetAroundOwn(surround,1,Universe.society.cust,False)
	If CountAgtset(surround) >= Universe.cash*0.1 Then
		If one.condition == Color_Blue Then
				one.condition = Color_Red
	If CountAgtset(surround) >= 3 Then
		If one.condition == Color_Yellow Then
				KillAgt(one)
			End if
		End if	
		End if
	End if
	End if
			End if
		End if
	End if
	End if
End if


Else
//ピークタイム後
If Rnd()<0.8 and My.inout==Color_Yellow Then
			DelAgt(My)
End if
If Rnd()<0.25 and My.inout==Color_Red Then
			DelAgt(My)
End if
If Rnd()<0.25 and My.inout==Color_Blue Then
			DelAgt(My)
End if

If Rnd() <0.1 Then
		one  = CreateAgt(Universe.society.cust)
	one.X = My.X
	one.Y = My.Y
	one.time=My.time
	one.inout=Color_Yellow
	
	If Rnd()*800 <Universe.advertisement and one.inout==Color_Yellow Then
		one.inout=Color_Red
	If Rnd() *450 <Universe.kitchen and one.inout==Color_Red Then
		one.inout=Color_Blue
		If Rnd() <0.8 Then
			one.inout=Color_Green
			If one.inout==Color_Green Then
				Universe.society.reputation(Int(one.X), Int(one.Y), 0) = Universe.society.reputation(Int(one.X), Int(one.Y), 0)+1
				one=CreateAgt(Universe.society.cust)
				one.X = My.X
				one.Y = My.Y
				one.time=My.time
				one.inout=Color_White
				one.afterbuy=one.afterbuy+1 
	If Universe.society.reputation(Int(one.X), Int(one.Y), 0)*Rnd() >10  and one.inout == Color_Red Then 
   		one.inout = Color_Blue

MakeOneAgtsetAroundOwn(surround,1,Universe.society.cust,False)
	If CountAgtset(surround) >= Universe.cash*0.1 Then
		If one.condition == Color_Blue Then
				one.condition = Color_Red
	If CountAgtset(surround) >= 3 Then
		If one.condition == Color_Yellow Then
				KillAgt(one)
			End if
		End if	
		End if
	End if
	End if
			End if
		End if
	End if
	End if
End if
End if
End if

MakeAgtsetSpace(set,Universe.society)
For each one in set
If one.afterbuy==2 and one.inout==Color_White Then
			 KillAgt(one)
End if
Next one

}
#end_rule UNIVERSE.SOCIETY.CUST




//-------------------------------------------------------
// Simulation Definition Division
//-------------------------------------------------------
Single_Simulation {
    Step_Max = 0;
    Time_Max = 0;
    End_Condition = "";
    Exec_Wait = 70;
    Exec_Wait_Max = 0;
    Random_Generator = Java_Standard;
    Exec_Order = Random;
    Exec_Order_Random_First_Step_Only = No;
    Random_Seed = 0;
    Redraw_Timing = Step;
    Redraw_Interval = 1;
    Garbage_Interval = 0;
}


//-------------------------------------------------------
// Simulation Loop Definition Division
//-------------------------------------------------------
Repeat_Simulation {
    Value_Change = None;
    Initial_Value_Change_None {
        Repeat_Max = 1;
    }
}


//-------------------------------------------------------
// 2 Dimension Map Display Definition Division
//-------------------------------------------------------
Map_Output {
    Map_Space_Name = "Universe.society";
    Map_Name = "society";
    Title = "";
    Disable = No;
    Background_Color = 255, 255, 255;
    Position_x = 1067;
    Position_y = 76;
    Size_x = 472;
    Size_y = 318;
    Map_Cell_Size = 4;
    Remarks = Yes;
    Legend_Pos = Top;
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    FastDraw = Yes;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Axis_Label = "", "";
    Draw_Range = 0, 0, 50, 50;
    Ruled_Line = No;
    Text_Display = No;
    Text_Display_Variable_Name = "";
    Chess_Type_Display_Position = No;
    Background_Transparent = No;
    Target_Layer = 0;
    Coordinate_Display = No;
    Space_Kind = Square_2D;
    BG_Pict = No;
    BG_Type = 0;
    BG_Var_Name = "";
    BG_File_Name = "";
    Origin_Position = 2;
    Output_Group_Name = "";
    Output {
        Map_Element_Name = "cust";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.society.cust";
        Draw_Line = No;
        Collection_Name = "";
        Line_Type = 0;
        Line_Arrow = 0;
        Line_Width = 0;
        Line_Color = 0, 0, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = "Universe.society.cust.inout";
        Marker_Id = 2;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 1.0;
        Agent_Image_Magnify_Variable_Name = "Universe.society.cust.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.society.cust.ID";
    }
}


//-------------------------------------------------------
// Time Graph Output Definition Division
//-------------------------------------------------------
Time_Graph {
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Graph_Name = "number_of_customer";
    Title = "";
    Disable = No;
    Background_Color = 255, 255, 255;
    Remarks = Yes;
    Legend_Pos = Top;
    FastDraw = No;
    Position_x = 0;
    Position_y = 5;
    Size_x = 918;
    Size_y = 911;
    Map_Cell_Size = -1;
    Axis_Label = "", "";
    Draw_By_JFree_Chart = Yes;
    Scale = 0, 0.0, 1000, 100.0, 100, 10.0;
    ScaleAuto = Yes, Yes;
    Output_Group_Name = "";
    Output {
        Graph_Element_Name = "店内";
        Line_Color = 255, 0, 0;
        Line_Width = 2;
        Marker_Id = 1;
        Output_Expression = "Universe.num_blue";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (0, 51, 255);
    }
    Output {
        Graph_Element_Name = "店外";
        Line_Color = 0, 255, 0;
        Line_Width = 2;
        Marker_Id = 1;
        Output_Expression = "Universe.num_red";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (255, 0, 51);
    }
    Output {
        Graph_Element_Name = "通りすがり";
        Line_Color = 255, 0, 255;
        Line_Width = 2;
        Marker_Id = 1;
        Output_Expression = "Universe.num_yellow";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (204, 204, 0);
    }
}


//-------------------------------------------------------
// Time Graph Output Definition Division
//-------------------------------------------------------
Time_Graph {
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Graph_Name = "total_sale_tpioka";
    Title = "";
    Disable = No;
    Background_Color = 255, 255, 255;
    Remarks = Yes;
    Legend_Pos = Top;
    FastDraw = Yes;
    Position_x = 917;
    Position_y = 4;
    Size_x = 996;
    Size_y = 506;
    Map_Cell_Size = -1;
    Axis_Label = "", "";
    Draw_By_JFree_Chart = Yes;
    Scale = 0, 0.0, 1000, 100.0, 100, 10.0;
    ScaleAuto = Yes, Yes;
    Output_Group_Name = "";
    Output {
        Graph_Element_Name = "sale_tapioka";
        Line_Color = 255, 0, 0;
        Line_Width = 2;
        Marker_Id = 1;
        Output_Expression = "Universe.num_tapioka";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (0, 0, 0);
    }
}


//-------------------------------------------------------
// Time Graph Output Definition Division
//-------------------------------------------------------
Time_Graph {
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Graph_Name = "sale_per_step";
    Title = "";
    Disable = No;
    Background_Color = 255, 255, 255;
    Remarks = Yes;
    Legend_Pos = Top;
    FastDraw = No;
    Position_x = 916;
    Position_y = 512;
    Size_x = 999;
    Size_y = 411;
    Map_Cell_Size = -1;
    Axis_Label = "", "";
    Draw_By_JFree_Chart = Yes;
    Scale = 0, 0.0, 1000, 100.0, 100, 10.0;
    ScaleAuto = Yes, Yes;
    Output_Group_Name = "";
    Output {
        Graph_Element_Name = "sale_per_tapioka";
        Line_Color = 128, 128, 128;
        Line_Width = 2;
        Marker_Id = 1;
        Output_Expression = "Universe.step_sale";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (0, 102, 102);
    }
}


//-------------------------------------------------------
// Control Panel Definition Division
//-------------------------------------------------------
Control_Panel {
    Display_Area = 549, 178, 723, 128;
    Display_Type = 0;
    Panel_Item {
        Item_Type = Slider;
        Item_Name = "initial_rate";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.initial_rate";
        Slider_Range_Max = 100;
        Slider_Value_Min = 0.0;
        Slider_Value_Step = 1.0;
        Slider_Value = "30";
    }
    Panel_Item {
        Item_Type = Edit_Box;
        Item_Name = "advertisement";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.advertisement";
        Text_Data = "120";
    }
    Panel_Item {
        Item_Type = Edit_Box;
        Item_Name = "cash";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.cash";
        Text_Data = "37";
    }
    Panel_Item {
        Item_Type = Edit_Box;
        Item_Name = "kitchen";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.kitchen";
        Text_Data = "225";
    }
    Panel_Item {
        Item_Type = Slider;
        Item_Name = "customer_initial";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.num_cust";
        Slider_Range_Max = 99;
        Slider_Value_Min = 1.0;
        Slider_Value_Step = 1.0;
        Slider_Value = "29";
    }
}


//-------------------------------------------------------
// Space Initial Value Definition Divsion
//-------------------------------------------------------
Space_Initial {
}


//-------------------------------------------------------
// Other Miscellaneous Data Definition Division
//-------------------------------------------------------
Others_Data {
    Indent = 4;
    Rule_Colored = Yes;
    Rule_LineNo = Yes;
    Window_Hide_Run = 1;
    Debug_Position_x = 735;
    Debug_Position_y = 84;
    Debug_Size_x = 400;
    Debug_Size_y = 200;
    Console_Position_x = 19;
    Console_Position_y = 28;
    Console_Size_x = 600;
    Console_Size_y = 120;
    Componen_Tree_Position_x = 11;
    Componen_Tree_Position_y = 8;
    Componen_Tree_Size_x = 250;
    Componen_Tree_Size_y = 400;
    Console_Background_Color = 16777215;
    Console_Foreground_Color = 255;
    Console_DisplayLines_Max = 500;
    plug_in_module_name = "";
    Font_Name = "Dialog";
    Font_Char_Set = 0;
    Font_Size = 14.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 0, 0, 0;
}


//-------------------------------------------------------
// Network Information Definition Division
//-------------------------------------------------------
Network_Info {
    Global_Space_Area = 0, 0, 100, 100;
    Local_Space_Info {
    }
}


//-------------------------------------------------------
// Window Location Definition Division
//-------------------------------------------------------
Window_Rectangle {
    Window_Name = Main_Window, -9, -9, 1938, 1048;
    Window_Name = Output_Setting_Window, 744, 349, 480, 350;
    Window_Name = Artisoc_Help_Window, 10, 10, 400, 300;
}


//-------------------------------------------------------
// Help Favorite Division
//-------------------------------------------------------
Help_Favorite {
}


//-------------------------------------------------------
// Model Description Division
//-------------------------------------------------------
Model_Description {
    Universe {
        Function Univ_Init {
        }
        Function Univ_Step_Begin {
        }
        Function Univ_Step_End {
        }
        Function Univ_Finish {
        }
    }
    Space Universe.society {
    }
    Agent Universe.society.cust {
        Function Agt_Init {
        }
        Function Agt_Step {
        }
    }
}
